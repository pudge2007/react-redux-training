{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { push } from \"connected-react-router\";\nimport * as actionCreators from \"../actions\";\nimport * as modalActionCreators from \"../../common/ModalDialog/actions\";\nimport * as notificationActionCreators from \"../../common/Notifications/actions\";\nimport { USER, SIGN_IN_MODAL } from \"../constants\";\n\nconst request = ({\n  login,\n  password\n}) => {\n  return new Promise((resolve, reject) => {\n    return login === \"bob\" && password === \"123\" ? setTimeout(() => resolve(USER), 1000) : reject(new Error(\"Неверные данные\"));\n  });\n};\n\nfunction* signIn(action) {\n  try {\n    const user = yield call(request, action.payload);\n    yield signInSuccess(user);\n  } catch (error) {\n    console.log(error);\n    /* yield put(actionCreators.signInFail); */\n\n    yield put(notificationActionCreators.addNotification({\n      message: error.message,\n      variant: \"error\"\n    }));\n  }\n}\n\nfunction* signInSuccess(user) {\n  yield put(actionCreators.signInSuccess(user));\n  yield put(notificationActionCreators.addNotification({\n    message: \"Вход успешно выполнен!\",\n    variant: \"success\"\n  }));\n  yield put(modalActionCreators.toggleModal(SIGN_IN_MODAL.modalName));\n  yield put(push(\"/cabinet\")); // TODO редирект\n}\n\nfunction* sendRequest() {\n  yield takeEvery(actionCreators.signInRequest, signIn);\n}\n\nexport default sendRequest;","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\auth\\sagas\\index.js"],"names":["call","put","takeEvery","push","actionCreators","modalActionCreators","notificationActionCreators","USER","SIGN_IN_MODAL","request","login","password","Promise","resolve","reject","setTimeout","Error","signIn","action","user","payload","signInSuccess","error","console","log","addNotification","message","variant","toggleModal","modalName","sendRequest","signInRequest"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,OAAO,KAAKC,cAAZ,MAAgC,YAAhC;AACA,OAAO,KAAKC,mBAAZ,MAAqC,kCAArC;AACA,OAAO,KAAKC,0BAAZ,MAA4C,oCAA5C;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,cAApC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAOJ,KAAK,KAAK,KAAV,IAAmBC,QAAQ,KAAK,KAAhC,GACHI,UAAU,CAAC,MAAMF,OAAO,CAACN,IAAD,CAAd,EAAsB,IAAtB,CADP,GAEHO,MAAM,CAAC,IAAIE,KAAJ,CAAU,iBAAV,CAAD,CAFV;AAGD,GAJM,CAAP;AAKD,CAND;;AAQA,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMnB,IAAI,CAACS,OAAD,EAAUS,MAAM,CAACE,OAAjB,CAAvB;AACA,UAAMC,aAAa,CAACF,IAAD,CAAnB;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;AACA,UAAMrB,GAAG,CACPK,0BAA0B,CAACmB,eAA3B,CAA2C;AACzCC,MAAAA,OAAO,EAAEJ,KAAK,CAACI,OAD0B;AAEzCC,MAAAA,OAAO,EAAE;AAFgC,KAA3C,CADO,CAAT;AAMD;AACF;;AAED,UAAUN,aAAV,CAAwBF,IAAxB,EAA8B;AAC5B,QAAMlB,GAAG,CAACG,cAAc,CAACiB,aAAf,CAA6BF,IAA7B,CAAD,CAAT;AACA,QAAMlB,GAAG,CACPK,0BAA0B,CAACmB,eAA3B,CAA2C;AACzCC,IAAAA,OAAO,EAAE,wBADgC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA3C,CADO,CAAT;AAMA,QAAM1B,GAAG,CAACI,mBAAmB,CAACuB,WAApB,CAAgCpB,aAAa,CAACqB,SAA9C,CAAD,CAAT;AACA,QAAM5B,GAAG,CAACE,IAAI,CAAC,UAAD,CAAL,CAAT,CAT4B,CAU5B;AACD;;AAED,UAAU2B,WAAV,GAAwB;AACtB,QAAM5B,SAAS,CAACE,cAAc,CAAC2B,aAAhB,EAA+Bd,MAA/B,CAAf;AACD;;AAED,eAAea,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actionCreators from \"../actions\";\r\nimport * as modalActionCreators from \"../../common/ModalDialog/actions\";\r\nimport * as notificationActionCreators from \"../../common/Notifications/actions\";\r\nimport { USER, SIGN_IN_MODAL } from \"../constants\";\r\n\r\nconst request = ({ login, password }) => {\r\n  return new Promise((resolve, reject) => {\r\n    return login === \"bob\" && password === \"123\"\r\n      ? setTimeout(() => resolve(USER), 1000)\r\n      : reject(new Error(\"Неверные данные\"));\r\n  });\r\n};\r\n\r\nfunction* signIn(action) {\r\n  try {\r\n    const user = yield call(request, action.payload);\r\n    yield signInSuccess(user);\r\n  } catch (error) {\r\n    console.log(error);\r\n    /* yield put(actionCreators.signInFail); */\r\n    yield put(\r\n      notificationActionCreators.addNotification({\r\n        message: error.message,\r\n        variant: \"error\"\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* signInSuccess(user) {\r\n  yield put(actionCreators.signInSuccess(user));\r\n  yield put(\r\n    notificationActionCreators.addNotification({\r\n      message: \"Вход успешно выполнен!\",\r\n      variant: \"success\"\r\n    })\r\n  );\r\n  yield put(modalActionCreators.toggleModal(SIGN_IN_MODAL.modalName));\r\n  yield put(push(\"/cabinet\"));\r\n  // TODO редирект\r\n}\r\n\r\nfunction* sendRequest() {\r\n  yield takeEvery(actionCreators.signInRequest, signIn);\r\n}\r\n\r\nexport default sendRequest;\r\n"]},"metadata":{},"sourceType":"module"}