{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\src\\\\modules\\\\common\\\\Notifications\\\\components\\\\index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { styles, icons } from \"./styles\";\n\nconst Notification = ({\n  variant,\n  message,\n  add\n}) => {\n  const classes = styles();\n  const Icon = icons[variant];\n\n  function close(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    /* setOpen(false); */\n\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: add,\n    autoHideDuration: 3000,\n    onClose: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes[variant],\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      color: \"inherit\",\n      onClick: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n  /* onClose: PropTypes.func, */\n\n};\nexport default Notification;","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\common\\Notifications\\components\\index.js"],"names":["React","PropTypes","clsx","Button","CloseIcon","IconButton","Snackbar","SnackbarContent","styles","icons","Notification","variant","message","add","classes","Icon","close","event","reason","vertical","horizontal","icon","iconVariant","propTypes","string","isRequired","oneOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,UAA9B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAA+B;AAClD,QAAMC,OAAO,GAAGN,MAAM,EAAtB;AACA,QAAMO,IAAI,GAAGN,KAAK,CAACE,OAAD,CAAlB;;AAEA,WAASK,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B;AAC5B,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;AAED;;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAEP,GALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEF,OAAO,CAACH,OAAD,CADpB;AAEE,IAAA,OAAO,EACL;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAEG,OAAO,CAACF,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEV,IAAI,CAACY,OAAO,CAACO,IAAT,EAAeP,OAAO,CAACQ,WAAvB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGV,OAFH,CAHJ;AAQE,IAAA,MAAM,EAAE,CACN,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAC,SAA9B;AAAwC,MAAA,OAAO,EAAEI,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEF,OAAO,CAACO,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADM,CARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AA4BD,CAxCD;;AA0CAX,YAAY,CAACa,SAAb,GAAyB;AACvBX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAAV,CAAiBC,UADH;AAEvBd,EAAAA,OAAO,EAAEV,SAAS,CAACyB,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,EAA6B,SAA7B,CAAhB,EAAyDD;AAClE;;AAHuB,CAAzB;AAMA,eAAef,YAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nimport { styles, icons } from \"./styles\";\r\n\r\nconst Notification = ({ variant, message, add }) => {\r\n  const classes = styles();\r\n  const Icon = icons[variant];\r\n\r\n  function close(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    /* setOpen(false); */\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        open={add}\r\n        autoHideDuration={3000}\r\n        onClose={close}\r\n      >\r\n        <SnackbarContent\r\n          className={classes[variant]}\r\n          message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n              {message}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton key=\"close\" color=\"inherit\" onClick={close}>\r\n              <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n  /* onClose: PropTypes.func, */\r\n};\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}