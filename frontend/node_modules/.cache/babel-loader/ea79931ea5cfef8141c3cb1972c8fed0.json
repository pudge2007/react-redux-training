{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\src\\\\modules\\\\common\\\\TextField\\\\index.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = (_ref) => {\n  let input = _ref.input,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      other = _objectWithoutProperties(_ref, [\"input\", \"label\", \"placeholder\", \"meta\"]);\n\n  return (\n    /*     <TextField\r\n            label={label}\r\n            placeholder={placeholder}\r\n            helperText={touched && error}\r\n            {...input}\r\n            {...other}\r\n            fullWidth\r\n        /> */\n    React.createElement(FormControl, {\n      className: classNames(classes.wrapper, {\n        [classes.wrapperTwoMessageLines]: twoErrorMessageLines\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(TextField, Object.assign({\n      label: label\n    }, input, {\n      error: Boolean(submitFailed && error)\n    }, others, {\n      onKeyUp: checkCapsLock,\n      onKeyDown: checkCapsLock,\n      onChange: event => {\n        input.onChange(event);\n        setTimeout(() => checkCapsLock(event), 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), error && submitFailed ? React.createElement(\"span\", {\n      className: classes.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ErrorOutline, {\n      className: classes.errorIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"\\xA0\", getTranslation(t, error)) : tipText && React.createElement(\"span\", {\n      className: classes.tip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, tipText))\n  );\n};\n\nexport default TextInput;","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\common\\TextField\\index.js"],"names":["React","TextField","TextInput","input","label","placeholder","meta","touched","error","other","classNames","classes","wrapper","wrapperTwoMessageLines","twoErrorMessageLines","Boolean","submitFailed","others","checkCapsLock","event","onChange","setTimeout","errorIcon","getTranslation","t","tipText","tip"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,SAAS,GAAG;AAAA,MACdC,KADc,QACdA,KADc;AAAA,MAEdC,KAFc,QAEdA,KAFc;AAAA,MAGdC,WAHc,QAGdA,WAHc;AAAA,uBAIdC,IAJc;AAAA,MAINC,OAJM,aAINA,OAJM;AAAA,MAIGC,KAJH,aAIGA,KAJH;AAAA,MAKXC,KALW;;AAAA;AAOlB;;;;;;;;AAQI,wBAAC,WAAD;AACA,MAAA,SAAS,EAAEC,UAAU,CAACC,OAAO,CAACC,OAAT,EAAkB;AACrC,SAACD,OAAO,CAACE,sBAAT,GAAkCC;AADG,OAAlB,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEV;AADX,OAEMD,KAFN;AAGE,MAAA,KAAK,EAAEY,OAAO,CAACC,YAAY,IAAIR,KAAjB;AAHhB,OAIMS,MAJN;AAKE,MAAA,OAAO,EAAEC,aALX;AAME,MAAA,SAAS,EAAEA,aANb;AAOE,MAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBhB,QAAAA,KAAK,CAACiB,QAAN,CAAeD,KAAf;AACAE,QAAAA,UAAU,CAAC,MAAMH,aAAa,CAACC,KAAD,CAApB,EAA6B,CAA7B,CAAV;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJA,EAgBCX,KAAK,IAAIQ,YAAT,GACC;AAAM,MAAA,SAAS,EAAEL,OAAO,CAACH,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEG,OAAO,CAACW,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,UAGGC,cAAc,CAACC,CAAD,EAAIhB,KAAJ,CAHjB,CADD,GAOCiB,OAAO,IAAI;AAAM,MAAA,SAAS,EAAEd,OAAO,CAACe,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,OAA/B,CAvBb;AAfc;AAAA,CAAlB;;AA0CA,eAAevB,SAAf","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst TextInput = ({\r\n    input,\r\n    label,\r\n    placeholder,\r\n    meta: { touched, error },\r\n    ...other\r\n  }) =>\r\n/*     <TextField\r\n        label={label}\r\n        placeholder={placeholder}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...other}\r\n        fullWidth\r\n    /> */\r\n    <FormControl\r\n    className={classNames(classes.wrapper, {\r\n      [classes.wrapperTwoMessageLines]: twoErrorMessageLines,\r\n    })}>\r\n    <TextField\r\n        label={label}\r\n      {...input}\r\n      error={Boolean(submitFailed && error)}\r\n      {...others}\r\n      onKeyUp={checkCapsLock}\r\n      onKeyDown={checkCapsLock}\r\n      onChange={(event) => {\r\n        input.onChange(event);\r\n        setTimeout(() => checkCapsLock(event), 1);\r\n      }}\r\n    />\r\n    {error && submitFailed ? (\r\n      <span className={classes.error}>\r\n        <ErrorOutline className={classes.errorIcon} />\r\n        &nbsp;\r\n        {getTranslation(t, error)}\r\n      </span>\r\n    ) : (\r\n      tipText && <span className={classes.tip}>{tipText}</span>\r\n    )}\r\n  </FormControl>\r\n\r\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}