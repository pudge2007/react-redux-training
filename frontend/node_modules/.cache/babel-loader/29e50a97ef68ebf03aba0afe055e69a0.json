{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport * as actionCreators from '../actions';\nimport * as modalActionCreators from '../../common/ModalDialog/actions';\nimport * as notificationActionCreators from '../../common/Notifications/actions';\nimport { USER, SIGN_IN_MODAL } from '../constants';\n\nconst request = ({\n  login,\n  password\n}) => {\n  return new Promise((resolve, reject) => {\n    return (login === 'bob', password === '123') ? setTimeout(() => resolve(USER), 1000) : reject(new Error('Неверные данные'));\n  });\n};\n\nfunction* signIn(action) {\n  try {\n    const user = yield call(request, action.payload);\n    yield signInSuccess(user);\n  } catch (error) {\n    console.log(error);\n    /* yield put(actionCreators.signInFail); */\n\n    yield put(notificationActionCreators.addNotification({\n      message: 'Вход успешно выполнен!',\n      variant: 'success'\n    }));\n  }\n}\n\nfunction* signInSuccess(user) {\n  yield put(actionCreators.signInSuccess(user));\n  yield put(notificationActionCreators.addNotification({\n    message: 'Вход успешно выполнен!',\n    variant: 'success'\n  }));\n  yield put(modalActionCreators.toggleModal(SIGN_IN_MODAL.modalName)); // TODO редирект\n}\n\nfunction* sendRequest() {\n  yield takeEvery(actionCreators.signInRequest, signIn);\n}\n\nexport default sendRequest;","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\auth\\sagas\\index.js"],"names":["call","put","takeEvery","actionCreators","modalActionCreators","notificationActionCreators","USER","SIGN_IN_MODAL","request","login","password","Promise","resolve","reject","setTimeout","Error","signIn","action","user","payload","signInSuccess","error","console","log","addNotification","message","variant","toggleModal","modalName","sendRequest","signInRequest"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAoC,oBAApC;AAEA,OAAO,KAAKC,cAAZ,MAAgC,YAAhC;AACA,OAAO,KAAKC,mBAAZ,MAAqC,kCAArC;AACA,OAAO,KAAKC,0BAAZ,MAA4C,oCAA5C;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,cAApC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAO,CAACJ,KAAK,KAAK,KAAV,EAAiBC,QAAQ,KAAK,KAA/B,IAAwCI,UAAU,CAAC,MAAMF,OAAO,CAACN,IAAD,CAAd,EAAsB,IAAtB,CAAlD,GAAgFO,MAAM,CAAC,IAAIE,KAAJ,CAAU,iBAAV,CAAD,CAA7F;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMlB,IAAI,CAACQ,OAAD,EAAUS,MAAM,CAACE,OAAjB,CAAvB;AACA,UAAMC,aAAa,CAACF,IAAD,CAAnB;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;;AACA,UAAMpB,GAAG,CAACI,0BAA0B,CAACmB,eAA3B,CAA2C;AACjDC,MAAAA,OAAO,EAAE,wBADwC;AAEjDC,MAAAA,OAAO,EAAE;AAFwC,KAA3C,CAAD,CAAT;AAIH;AACJ;;AAED,UAAUN,aAAV,CAAwBF,IAAxB,EAA8B;AAC1B,QAAMjB,GAAG,CAACE,cAAc,CAACiB,aAAf,CAA6BF,IAA7B,CAAD,CAAT;AACA,QAAMjB,GAAG,CAACI,0BAA0B,CAACmB,eAA3B,CAA2C;AACjDC,IAAAA,OAAO,EAAE,wBADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAA3C,CAAD,CAAT;AAIA,QAAMzB,GAAG,CAACG,mBAAmB,CAACuB,WAApB,CAAgCpB,aAAa,CAACqB,SAA9C,CAAD,CAAT,CAN0B,CAO1B;AACH;;AAED,UAAUC,WAAV,GAAwB;AACpB,QAAM3B,SAAS,CAACC,cAAc,CAAC2B,aAAhB,EAA+Bd,MAA/B,CAAf;AACH;;AAED,eAAea,WAAf","sourcesContent":["import { call, put, takeEvery} from 'redux-saga/effects';\r\n\r\nimport * as actionCreators from '../actions';\r\nimport * as modalActionCreators from '../../common/ModalDialog/actions';\r\nimport * as notificationActionCreators from '../../common/Notifications/actions';\r\nimport { USER, SIGN_IN_MODAL } from '../constants';\r\n\r\nconst request = ({login, password}) => {\r\n    return new Promise((resolve, reject) => {\r\n        return (login === 'bob', password === '123') ? setTimeout(() => resolve(USER), 1000) : reject(new Error('Неверные данные'))\r\n    });\r\n}\r\n\r\nfunction* signIn(action) {\r\n    try {\r\n        const user = yield call(request, action.payload);\r\n        yield signInSuccess(user);\r\n    } catch (error) {\r\n        console.log(error)\r\n        /* yield put(actionCreators.signInFail); */\r\n        yield put(notificationActionCreators.addNotification({\r\n            message: 'Вход успешно выполнен!',\r\n            variant: 'success'\r\n        }))\r\n    }\r\n}\r\n\r\nfunction* signInSuccess(user) {\r\n    yield put(actionCreators.signInSuccess(user));\r\n    yield put(notificationActionCreators.addNotification({\r\n        message: 'Вход успешно выполнен!',\r\n        variant: 'success'\r\n    }))\r\n    yield put(modalActionCreators.toggleModal(SIGN_IN_MODAL.modalName));\r\n    // TODO редирект\r\n}\r\n\r\nfunction* sendRequest() {\r\n    yield takeEvery(actionCreators.signInRequest, signIn)\r\n}\r\n\r\nexport default sendRequest;"]},"metadata":{},"sourceType":"module"}