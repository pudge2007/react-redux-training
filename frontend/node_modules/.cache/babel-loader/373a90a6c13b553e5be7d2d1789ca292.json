{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\src\\\\modules\\\\common\\\\ModalDialog\\\\containers\\\\ModalDialogContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ModalDialog from '../components';\nimport * as actionCreators from '../actions';\nimport { isOpen } from '../selectors';\n\nclass ModalDialogContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.closeModal = () => {\n      this.props.actions.toggleModal(this.props.modalName);\n    };\n  }\n\n  render() {\n    return React.createElement(ModalDialog, Object.assign({\n      onClose: this.closeModal\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, {\n  modalName\n}) => {\n  return {\n    isOpen: isOpen(state, modalName)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(actionCreators, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDialogContainer);","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\common\\ModalDialog\\containers\\ModalDialogContainer.js"],"names":["React","Component","connect","bindActionCreators","ModalDialog","actionCreators","isOpen","ModalDialogContainer","closeModal","props","actions","toggleModal","modalName","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,YAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAEzCO,UAFyC,GAE5B,MAAM;AACf,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+B,KAAKF,KAAL,CAAWG,SAA1C;AACH,KAJwC;AAAA;;AAMzCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKL;AAA3B,OAA2C,KAAKC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAVwC;;AAa7C,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQ;AAAEH,EAAAA;AAAF,CAAR,KAA0B;AAC9C,SAAO;AACHN,IAAAA,MAAM,EAAEA,MAAM,CAACS,KAAD,EAAQH,SAAR;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHP,IAAAA,OAAO,EAAEP,kBAAkB,CAACE,cAAD,EAAiBY,QAAjB;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,oBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport ModalDialog from '../components';\r\nimport * as actionCreators from '../actions';\r\nimport { isOpen } from '../selectors';\r\n\r\nclass ModalDialogContainer extends Component {\r\n    \r\n    closeModal = () => {\r\n        this.props.actions.toggleModal(this.props.modalName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog onClose={this.closeModal} {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { modalName }) => {\r\n    return {\r\n        isOpen: isOpen(state, modalName),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(actionCreators, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDialogContainer);"]},"metadata":{},"sourceType":"module"}