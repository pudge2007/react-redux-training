{"ast":null,"code":"import _slicedToArray from \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\mern-kinopoisk\\\\frontend\\\\src\\\\modules\\\\common\\\\Notifications\\\\components\\\\index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { styles, icons } from './styles';\n\nconst Notification = ({\n  variant = \"success\",\n  message = \"This is a success message!\"\n}) => {\n  const classes = styles();\n  const Icon = variantIcon[variant];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isOpen = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Open success snackbar\"), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: isOpen,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: clsx(classes[variant], className),\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nNotification.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n};\nexport default Notification;","map":{"version":3,"sources":["D:\\projects\\mern-kinopoisk\\frontend\\src\\modules\\common\\Notifications\\components\\index.js"],"names":["React","PropTypes","clsx","Button","CloseIcon","IconButton","Snackbar","SnackbarContent","styles","icons","Notification","variant","message","classes","Icon","variantIcon","useState","isOpen","setOpen","handleClick","handleClose","event","reason","vertical","horizontal","className","icon","iconVariant","onClose","propTypes","string","func","oneOf","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nimport { styles, icons } from './styles';\r\n\r\nconst Notification = ({\r\n  variant = \"success\",\r\n  message = \"This is a success message!\"\r\n}) => {\r\n  const classes = styles();\r\n  const Icon = variantIcon[variant];\r\n  const [isOpen, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        open={isOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <SnackbarContent\r\n          className={clsx(classes[variant], className)}\r\n          message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n              {message}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\r\n              <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n  };\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}